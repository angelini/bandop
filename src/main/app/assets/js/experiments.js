// Generated by CoffeeScript 1.6.3
(function() {
  var _ref, _ref1,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Bandop.Experiment = (function(_super) {
    __extends(Experiment, _super);

    function Experiment() {
      _ref = Experiment.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Experiment.resourceName = 'experiment';

    Experiment.encode('name');

    Experiment.belongsTo('user', {
      autoload: false
    });

    Experiment.hasOne('algorithm');

    Experiment.hasMany('designs');

    return Experiment;

  })(Bandop.Model);

  Bandop.ExperimentsController = (function(_super) {
    __extends(ExperimentsController, _super);

    function ExperimentsController() {
      _ref1 = ExperimentsController.__super__.constructor.apply(this, arguments);
      return _ref1;
    }

    ExperimentsController.prototype.routingKey = 'experiments';

    ExperimentsController.prototype.index = function(params) {
      var _this = this;
      return Bandop.Experiment.load(this.errorHandler(function(experiments) {
        return _this.set('experiments', experiments);
      }));
    };

    ExperimentsController.prototype.show = function(params) {
      var _this = this;
      return Bandop.Experiment.find(params.id, this.errorHandler(function(experiment) {
        return _this.set('experiment', experiment);
      }));
    };

    return ExperimentsController;

  })(Bandop.Controller);

}).call(this);
