// Generated by CoffeeScript 1.6.3
(function() {
  var Bandop, _ref, _ref1, _ref2, _ref3,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Bandop = (function(_super) {
    __extends(Bandop, _super);

    function Bandop() {
      _ref = Bandop.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Bandop.root('experiments#index');

    Bandop.resources('experiments', function() {
      return this.resources('designs', {
        only: ['show', 'new']
      });
    });

    Bandop.route('login', 'users#login');

    Bandop.route('logout', 'users#logout');

    Bandop.alert = function(message) {
      this.set('alertMessage', message);
      return $('html').animate({
        scrollTop: 0
      });
    };

    Bandop.dissmissAlert = function() {
      return this.unset('alertMessage');
    };

    return Bandop;

  })(Batman.App);

  Bandop.RestStorage = (function(_super) {
    __extends(RestStorage, _super);

    function RestStorage() {
      _ref1 = RestStorage.__super__.constructor.apply(this, arguments);
      return _ref1;
    }

    RestStorage.prototype.serializeAsForm = false;

    RestStorage.prototype.recordJsonNamespace = function() {
      return false;
    };

    return RestStorage;

  })(Batman.RestStorage);

  Bandop.Model = (function(_super) {
    __extends(Model, _super);

    function Model() {
      _ref2 = Model.__super__.constructor.apply(this, arguments);
      return _ref2;
    }

    Model.urlPrefix = '/api';

    Model.prototype.urlPrefix = '/api';

    Model.persist(Bandop.RestStorage);

    return Model;

  })(Batman.Model);

  Bandop.Controller = (function(_super) {
    __extends(Controller, _super);

    function Controller() {
      _ref3 = Controller.__super__.constructor.apply(this, arguments);
      return _ref3;
    }

    Controller.catchError(Batman.StorageAdapter.UnauthorizedError, {
      "with": 'redirectLogin'
    });

    Controller.afterAction(function() {
      return Bandop.dissmissAlert();
    });

    Controller.beforeAction(function() {
      if (!Bandop.get('currentUser') && $.cookie('_bandop_login')) {
        return Bandop.apiRequest({
          method: 'GET',
          url: 'auth/current',
          success: this.setCurrentUser,
          error: this.redirectLogin
        });
      }
    });

    Controller.prototype.setCurrentUser = function(user) {
      return Bandop.set('currentUser', new Bandop.User(user));
    };

    Controller.prototype.redirectLogin = function() {
      return Batman.redirect({
        controller: 'users',
        action: 'login',
        redirectController: this.routingKey,
        redirectAction: this.action,
        redirectId: this.params.id
      });
    };

    return Controller;

  })(Batman.Controller);

  Bandop.apiRequest = function(options) {
    return new Batman.Request({
      method: options.method || 'GET',
      contentType: 'application/json',
      url: '/api/' + options.url,
      data: JSON.stringify(options.data),
      success: options.success,
      error: options.error
    });
  };

  $.cookie.raw = true;

  Batman.View.prototype.cache = false;

  Batman.config.usePushState = false;

  Batman.config.pathToHTML = '/assets/html';

  window.Bandop = Bandop;

}).call(this);
